                            | # 郭劲豪 2200013146
                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Sample Linked list
0x018:                      | .align 8
0x018:                      | Array:
0x018: ca0b000000000000     |     .quad 0xbca
0x020: ba0c000000000000     |     .quad 0xcba
0x028: cb0a000000000000     |     .quad 0xacb
0x030: ab0c000000000000     |     .quad 0xcab
0x038: bc0a000000000000     |     .quad 0xabc
0x040: ac0b000000000000     |     .quad 0xbac
                            | 
0x048:                      | main: 
0x048: 30f71800000000000000 | 	irmovq Array,%rdi
0x052: 30f60600000000000000 |     irmovq $6,%rsi
0x05c: 806600000000000000   | 	call bubble_sort
0x065: 90                   | 	ret
                            | 
                            | # void bubble_sort(long *data, long count)
                            | # data in %rdi, count in %rsi
0x066:                      | bubble_sort:
0x066: 30fb0800000000000000 |     irmovq $8,%r11      # Constant 8
0x070: 30fe0100000000000000 |     irmovq $1,%r14      # Constant 1
0x07a: 2068                 |     rrmovq %rsi,%r8
0x07c: 61e8                 |     subq %r14,%r8
0x07e: 6088                 |     addq %r8,%r8
0x080: 6088                 |     addq %r8,%r8
0x082: 6088                 |     addq %r8,%r8    # %r8 = 8 * (count - 1)
0x084: 6078                 |     addq %rdi,%r8
0x086:                      | loop1:
0x086: 2079                 |     rrmovq %rdi,%r9
0x088:                      | loop2:
0x088: 50c90800000000000000 |     mrmovq 0x8(%r9),%r12
0x092: 50d90000000000000000 |     mrmovq (%r9),%r13
0x09c: 61cd                 |     subq %r12,%r13
0x09e: 71cf00000000000000   |     jle next
0x0a7: 50c90800000000000000 |     mrmovq 0x8(%r9),%r12
0x0b1: 50d90000000000000000 |     mrmovq (%r9),%r13
0x0bb: 40d90800000000000000 |     rmmovq %r13,0x8(%r9)
0x0c5: 40c90000000000000000 |     rmmovq %r12,(%r9)
0x0cf:                      | next:
0x0cf: 60b9                 |     addq %r11,%r9         # i++
0x0d1: 209a                 |     rrmovq %r9,%r10
0x0d3: 618a                 |     subq %r8,%r10
0x0d5: 718800000000000000   |     jle loop2
0x0de: 208a                 |     rrmovq %r8,%r10
0x0e0: 617a                 |     subq %rdi,%r10
0x0e2: 758600000000000000   |     jge loop1
                            | 
0x0eb: 90                   |     ret                   # Return
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:
